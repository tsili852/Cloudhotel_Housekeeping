"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var page_1 = require("ui/page");
var router_1 = require("nativescript-angular/router");
var technitian_list_service_1 = require("../../shared/technitian/technitian-list.service");
var drawer_page_1 = require("../drawer.page");
var TechnitiansComponent = (function (_super) {
    __extends(TechnitiansComponent, _super);
    function TechnitiansComponent(routerExtensions, page, technitianListService, changeDetectorRef) {
        var _this = _super.call(this, changeDetectorRef) || this;
        _this.routerExtensions = routerExtensions;
        _this.page = page;
        _this.technitianListService = technitianListService;
        _this.changeDetectorRef = changeDetectorRef;
        _this.technitiansList = [];
        _this.technitian = "";
        return _this;
    }
    TechnitiansComponent.prototype.ngOnInit = function () {
        this.page.actionBarHidden = false;
        this.technitiansList = this.technitianListService.load();
    };
    return TechnitiansComponent;
}(drawer_page_1.DrawerPage));
TechnitiansComponent = __decorate([
    core_1.Component({
        selector: "maids",
        templateUrl: "pages/technitians/technitians.html",
        styleUrls: ["pages/technitians/technitians-common.css", "pages/technitians/technitians.css"],
        providers: [technitian_list_service_1.TechnitianListService]
    }),
    __metadata("design:paramtypes", [router_1.RouterExtensions,
        page_1.Page,
        technitian_list_service_1.TechnitianListService,
        core_1.ChangeDetectorRef])
], TechnitiansComponent);
exports.TechnitiansComponent = TechnitiansComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVjaG5pdGlhbnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidGVjaG5pdGlhbnMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsc0NBQW9HO0FBQ3BHLGdDQUErQjtBQUUvQixzREFBK0Q7QUFJL0QsMkZBQXdGO0FBR3hGLDhDQUE0QztBQVE1QyxJQUFhLG9CQUFvQjtJQUFTLHdDQUFVO0lBSWhELDhCQUFvQixnQkFBa0MsRUFDMUMsSUFBVSxFQUNWLHFCQUE0QyxFQUM1QyxpQkFBb0M7UUFIaEQsWUFJUSxrQkFBTSxpQkFBaUIsQ0FBQyxTQUMzQjtRQUxlLHNCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDMUMsVUFBSSxHQUFKLElBQUksQ0FBTTtRQUNWLDJCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7UUFDNUMsdUJBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQU5oRCxxQkFBZSxHQUFzQixFQUFFLENBQUM7UUFDeEMsZ0JBQVUsR0FBRyxFQUFFLENBQUM7O0lBT1osQ0FBQztJQUVMLHVDQUFRLEdBQVI7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUM7UUFDbEMsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDN0QsQ0FBQztJQUNMLDJCQUFDO0FBQUQsQ0FBQyxBQWZELENBQTBDLHdCQUFVLEdBZW5EO0FBZlksb0JBQW9CO0lBTmhDLGdCQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsT0FBTztRQUNqQixXQUFXLEVBQUUsb0NBQW9DO1FBQ2pELFNBQVMsRUFBRSxDQUFDLDBDQUEwQyxFQUFFLG1DQUFtQyxDQUFDO1FBQzVGLFNBQVMsRUFBRSxDQUFDLCtDQUFxQixDQUFDO0tBQ3JDLENBQUM7cUNBS3dDLHlCQUFnQjtRQUNwQyxXQUFJO1FBQ2EsK0NBQXFCO1FBQ3pCLHdCQUFpQjtHQVB2QyxvQkFBb0IsQ0FlaEM7QUFmWSxvREFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgTmdab25lLCBFbGVtZW50UmVmLCBWaWV3Q2hpbGQsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgUGFnZSB9IGZyb20gXCJ1aS9wYWdlXCI7XHJcbmltcG9ydCB7IENvbG9yIH0gZnJvbSBcImNvbG9yXCI7XHJcbmltcG9ydCB7IFJvdXRlckV4dGVuc2lvbnMgfSBmcm9tIFwibmF0aXZlc2NyaXB0LWFuZ3VsYXIvcm91dGVyXCI7XHJcbmltcG9ydCB7IFRuc1NpZGVEcmF3ZXIgfSBmcm9tIFwibmF0aXZlc2NyaXB0LXNpZGVkcmF3ZXJcIjtcclxuaW1wb3J0ICogYXMgYXBwbGljYXRpb25TZXR0aW5ncyBmcm9tIFwidG5zLWNvcmUtbW9kdWxlcy9hcHBsaWNhdGlvbi1zZXR0aW5nc1wiO1xyXG5pbXBvcnQgeyBUZWNobml0aWFuIH0gZnJvbSBcIi4uLy4uL3NoYXJlZC90ZWNobml0aWFuL3RlY2huaXRpYW5cIjtcclxuaW1wb3J0IHsgVGVjaG5pdGlhbkxpc3RTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL3RlY2huaXRpYW4vdGVjaG5pdGlhbi1saXN0LnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBSYWRTaWRlRHJhd2VyQ29tcG9uZW50LCBTaWRlRHJhd2VyVHlwZSB9IGZyb20gXCJuYXRpdmVzY3JpcHQtcHJvLXVpL3NpZGVkcmF3ZXIvYW5ndWxhclwiO1xyXG5pbXBvcnQgeyBSYWRTaWRlRHJhd2VyIH0gZnJvbSAnbmF0aXZlc2NyaXB0LXByby11aS9zaWRlZHJhd2VyJztcclxuaW1wb3J0IHsgRHJhd2VyUGFnZSB9IGZyb20gXCIuLi9kcmF3ZXIucGFnZVwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJtYWlkc1wiLFxyXG4gICAgdGVtcGxhdGVVcmw6IFwicGFnZXMvdGVjaG5pdGlhbnMvdGVjaG5pdGlhbnMuaHRtbFwiLFxyXG4gICAgc3R5bGVVcmxzOiBbXCJwYWdlcy90ZWNobml0aWFucy90ZWNobml0aWFucy1jb21tb24uY3NzXCIsIFwicGFnZXMvdGVjaG5pdGlhbnMvdGVjaG5pdGlhbnMuY3NzXCJdLFxyXG4gICAgcHJvdmlkZXJzOiBbVGVjaG5pdGlhbkxpc3RTZXJ2aWNlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGVjaG5pdGlhbnNDb21wb25lbnQgZXh0ZW5kcyBEcmF3ZXJQYWdlIGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIHRlY2huaXRpYW5zTGlzdDogQXJyYXk8VGVjaG5pdGlhbj4gPSBbXTtcclxuICAgIHRlY2huaXRpYW4gPSBcIlwiO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcm91dGVyRXh0ZW5zaW9uczogUm91dGVyRXh0ZW5zaW9ucywgXHJcbiAgICAgICAgcHJpdmF0ZSBwYWdlOiBQYWdlLCBcclxuICAgICAgICBwcml2YXRlIHRlY2huaXRpYW5MaXN0U2VydmljZTogVGVjaG5pdGlhbkxpc3RTZXJ2aWNlLCBcclxuICAgICAgICBwcml2YXRlIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikge1xyXG4gICAgICAgICAgICBzdXBlcihjaGFuZ2VEZXRlY3RvclJlZik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCkge1xyXG4gICAgICAgIHRoaXMucGFnZS5hY3Rpb25CYXJIaWRkZW4gPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnRlY2huaXRpYW5zTGlzdCA9IHRoaXMudGVjaG5pdGlhbkxpc3RTZXJ2aWNlLmxvYWQoKTtcclxuICAgIH1cclxufSJdfQ==